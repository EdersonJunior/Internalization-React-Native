{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.translate=void 0;var _reactNativeWeb=require(\"react-native-web\");var _i18nJs=_interopRequireDefault(require(\"i18n-js\"));var _enUS=_interopRequireDefault(require(\"./en-US\"));var _ptBR=_interopRequireDefault(require(\"./pt-BR\"));var _deDE=_interopRequireDefault(require(\"./de-DE\"));var _ruRU=_interopRequireDefault(require(\"./ru-RU\"));(function(){var enterModule=(typeof reactHotLoaderGlobal!=='undefined'?reactHotLoaderGlobal:require('react-hot-loader')).enterModule;enterModule&&enterModule(module);})();var __signature__=typeof reactHotLoaderGlobal!=='undefined'?reactHotLoaderGlobal.default.signature:function(a){return a;};var normalizeTranslate={'en_US':'en_US','pt_BR':'pt_BR','en':'en_US','de_DE':'de_DE','ru_RU':'ru_RU'};var getLanguageByDevice=function getLanguageByDevice(){if(_reactNativeWeb.Platform.OS==='ios'){return _reactNativeWeb.NativeModules.SettingsManager.settings.AppleLocale;}else if(_reactNativeWeb.Platform.OS==='android')return'en';};_i18nJs.default.fallback=true;_i18nJs.default.translations={'en_US':_enUS.default,'pt_BR':_ptBR.default,'de_DE':_deDE.default,'ru_RU':_ruRU.default};var setLanguageToI18n=function setLanguageToI18n(){var language=getLanguageByDevice();var translateNormalize=normalizeTranslate[language];var iHaveThisLanguage=_i18nJs.default.translations.hasOwnProperty(translateNormalize);iHaveThisLanguage?_i18nJs.default.locale=translateNormalize:_i18nJs.default.defaultLocale='en_US';};setLanguageToI18n();var translate=function translate(key){return _i18nJs.default.t(key);};exports.translate=translate;;(function(){var reactHotLoader=(typeof reactHotLoaderGlobal!=='undefined'?reactHotLoaderGlobal:require('react-hot-loader')).default;if(!reactHotLoader){return;}reactHotLoader.register(normalizeTranslate,\"normalizeTranslate\",\"/home/eder/dev/talkforfun/lab/internalization/src/locales/index.js\");reactHotLoader.register(getLanguageByDevice,\"getLanguageByDevice\",\"/home/eder/dev/talkforfun/lab/internalization/src/locales/index.js\");reactHotLoader.register(setLanguageToI18n,\"setLanguageToI18n\",\"/home/eder/dev/talkforfun/lab/internalization/src/locales/index.js\");reactHotLoader.register(translate,\"translate\",\"/home/eder/dev/talkforfun/lab/internalization/src/locales/index.js\");})();;(function(){var leaveModule=(typeof reactHotLoaderGlobal!=='undefined'?reactHotLoaderGlobal:require('react-hot-loader')).leaveModule;leaveModule&&leaveModule(module);})();","map":{"version":3,"sources":["/home/eder/dev/talkforfun/lab/internalization/src/locales/index.js"],"names":["normalizeTranslate","getLanguageByDevice","Platform","OS","NativeModules","SettingsManager","settings","AppleLocale","I18n","fallback","translations","en","pt","de","ru","setLanguageToI18n","language","translateNormalize","iHaveThisLanguage","hasOwnProperty","locale","defaultLocale","translate","key","t"],"mappings":"qKAAA,gDACA,uDACA,qDACA,qDACA,qDACA,qD,qSAEA,GAAMA,CAAAA,kBAAkB,CAAG,CACzB,QAAS,OADgB,CAEzB,QAAS,OAFgB,CAGzB,KAAM,OAHmB,CAIzB,QAAS,OAJgB,CAKzB,QAAS,OALgB,CAA3B,CAcA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,GAAIC,yBAASC,EAAT,GAAgB,KAApB,CAA2B,CACzB,MAAOC,+BAAcC,eAAd,CAA8BC,QAA9B,CAAuCC,WAA9C,CAED,CAHD,IAGO,IAAIL,yBAASC,EAAT,GAAgB,SAApB,CAEL,MAAO,IAAP,CACH,CAPD,CASAK,gBAAKC,QAAL,CAAgB,IAAhB,CAEAD,gBAAKE,YAAL,CAAoB,CAClB,QAASC,aADS,CAElB,QAASC,aAFS,CAGlB,QAASC,aAHS,CAIlB,QAASC,aAJS,CAApB,CAOA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,QAAQ,CAAGf,mBAAmB,EAApC,CACA,GAAMgB,CAAAA,kBAAkB,CAAGjB,kBAAkB,CAACgB,QAAD,CAA7C,CACA,GAAME,CAAAA,iBAAiB,CAAGV,gBAAKE,YAAL,CAAkBS,cAAlB,CAAiCF,kBAAjC,CAA1B,CACAC,iBAAiB,CACbV,gBAAKY,MAAL,CAAcH,kBADD,CAEbT,gBAAKa,aAAL,CAAqB,OAFzB,CAGD,CAPD,CASAN,iBAAiB,GAEV,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,GAAG,QAAIf,iBAAKgB,CAAL,CAAOD,GAAP,CAAJ,EAArB,C,qNA3CDvB,kB,oHAcAC,mB,qHAkBAc,iB,mHAWOO,S","sourcesContent":["import { Platform, NativeModules } from 'react-native'\nimport I18n from 'i18n-js'\nimport en from './en-US'\nimport pt from './pt-BR'\nimport de from './de-DE'\nimport ru from './ru-RU'\n\nconst normalizeTranslate = {\n  'en_US': 'en_US',\n  'pt_BR': 'pt_BR',\n  'en': 'en_US',\n  'de_DE': 'de_DE',\n  'ru_RU': 'ru_RU'\n  // 'pt_US': 'pt_BR',\n}\n\n// const getLanguageByDevice = () => {\n//   return Platform.OS === 'ios' || Platform.PlatformWebStatic === 'web'\n//     ? NativeModules.SettingsManager.settings.AppleLocale\n//     : NativeModules.I18nManager.localeIdentifier\n// }\nconst getLanguageByDevice = () => {\n  if (Platform.OS === 'ios') {\n    return NativeModules.SettingsManager.settings.AppleLocale\n  \n  } else if (Platform.OS === 'android')\n\n    return 'en'\n}\n\nI18n.fallback = true\n\nI18n.translations = {\n  'en_US': en,\n  'pt_BR': pt,\n  'de_DE': de,\n  'ru_RU': ru\n}\n\nconst setLanguageToI18n = () => {\n  const language = getLanguageByDevice()\n  const translateNormalize = normalizeTranslate[language]\n  const iHaveThisLanguage = I18n.translations.hasOwnProperty(translateNormalize)\n  iHaveThisLanguage\n    ? I18n.locale = translateNormalize\n    : I18n.defaultLocale = 'en_US'\n}\n\nsetLanguageToI18n()\n\nexport const translate = key => I18n.t(key)"]},"metadata":{},"sourceType":"script"}